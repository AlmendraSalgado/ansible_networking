---
- name: Upgrade Cisco IOS devices
  hosts: cisco
  gather_facts: false

  vars:
    ansible_network_cli_ssh_type: paramiko
    desired_ios_image: C9800-SW-iosxe-wlc.17.08.01.SPA.bin

  pre_tasks:
    # Gather information (facts)
    - name: Gather facts from cisco ios devices
      # Content suggestion provided by Ansible Lightspeed
      cisco.ios.ios_facts:
        gather_subset: all

    - name: Show current cisco ios devices version
      ansible.builtin.debug:
        msg: "{{ item }}"
      with_items:
        - "The current IOS version is: {{ ansible_net_version }}"
        - "The IOS type is: {{ ansible_net_iostype }}"

    # - name: Check boot path
    #   cisco.ios.ios_command:
    #     commands: 'show boot'
    #   register: results

    # - name: Debug previous results output
    #   # Content suggestion provided by Ansible Lightspeed
    #   ansible.builtin.debug:
    #     msg: "{{ results.stdout }}"

    # - name: Check availability of flashs
    #   cisco.ios.ios_command:
    #     commands: "show file systems | include flash"
    #   register: flash_values

    # - name: debug flash_values from previous tasks
    #   # Content suggestion provided by Ansible Lightspeed
    #   ansible.builtin.debug:
    #     msg: "{{ flash_values.stdout }}"

  tasks:
    # Perform a backup before to upgrade
    - name: Backup cisco ios config device
      # It will create a backup file called <hostname>_config.<current-date>@<current-time>
      cisco.ios.ios_config:
        backup: true

    - name: Check if the image is already present on the flash
      cisco.ios.ios_command:
        commands: 'show flash: | include {{ desired_ios_image  }}'
      register: flash_info

    - name: Debug var
      # Content suggestion provided by Ansible Lightspeed
      ansible.builtin.debug:
        msg: "{{ flash_info.stdout }}"

    - ansible.builtin.include_tasks: copy_ios_image.yaml
      when: desired_ios_image in flash_info.stdout

    # Set the device to boot from the new image
    - name: Set the device to boot from the new image
      # Content suggestion provided by Ansible Lightspeed
      cisco.ios.ios_config:
        lines:
          - "boot system flash:{{ desired_ios_image }}"
        save_when: always 
    
    - name: Check Boot path
      cisco.ios.ios_command:
        commands: 'show boot | i BOOT'
      register: bootvar

    - name: Debug Boot path
      # Content suggestion provided by Ansible Lightspeed
      ansible.builtin.debug:
        msg: "{{ bootvar.stdout }}"

    # Reload device
    - name: Reload cisco ios device
      # Content suggestion provided by Ansible Lightspeed
      cisco.ios.ios_command:
        commands:
          - command: "reload"
            prompt: 'confirm'
            answer: 'y'
      vars:
        ansible_command_timeout: 360
    
    - name: Reset connection to the switch
      ansible.builtin.meta: reset_connection

    # Wait for device to become available again
    - name: Wait for the cisco ios device to become alive again
      # Content suggestion provided by Ansible Lightspeed
      ansible.builtin.wait_for:
        port: 22
        host: "{{ ansible_host }}"
        delay: 240
        timeout: 1800
      delegate_to: localhost
      connection: local

  post_tasks:
    # Gather information (facts)
    - name: Gather facts from cisco ios devices
      # Content suggestion provided by Ansible Lightspeed
      cisco.ios.ios_facts:
        gather_subset: all

    - name: Show new cisco ios devices version
      ansible.builtin.debug:
        msg: "{{ item }}"
      loop:
        - "The new IOS version is: {{ ansible_net_version }}"
        - "The IOS type is: {{ ansible_net_iostype }}"